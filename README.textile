h1. Clever Algorithms & JRubyArt Playground


Learning about evolutionary algorithms and visualising them in Processing, via JRubyArt.

h2. Install

Check the JRubyArt docs for latest install instructions. My merry dance was something like installing Java 8, JRuby then JRubyArt and adding some paths like so:

bc. # JAVA
export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
export PATH=$PATH:$JAVA_HOME/bin

bc. # JRUBY
export PATH=/data/development/vendor/jruby-9.0.3.0/bin:$PATH

h2. Run

Once installed you can do something like this to fire up Processing and get a REPL.

bc. k9 watch genetic-oo.rb

h2. Web

The end game is to get this on the web. I'm working in JRubyArt to prototype, then transpiling the algorithm to Javascript via Opal and rendering in p5js. You'll be able to run up a web server if you have Node/Bower/Grunt installed like so:

bc. npm install
bc. grunt serve

The webapp was bootstrapped via Yeoman.

h2. Thanks

- "Clever Algorithms":http://www.cleveralgorithms.com
- "JRubyArt":https://github.com/ruby-processing/JRubyArt/wiki
- "Processing":https://processing.org
- "p5js":http://p5js.org
- "Opal":http://opalrb.org
